{"ast":null,"code":"import Client from './api';\nexport const SignInUser = async data => {\n  try {\n    const res = await Client.post('/auth/login', data);\n    localStorage.setItem('token', res.data.token);\n    return res.data.user;\n  } catch (error) {\n    throw error;\n  }\n};\n_c = SignInUser;\nexport const RegisterUser = async data => {\n  try {\n    const res = await Client.post('/auth/register', data);\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c2 = RegisterUser;\nexport const CheckSession = async () => {\n  try {\n    const res = await Client.get('/auth/session');\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c3 = CheckSession;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SignInUser\");\n$RefreshReg$(_c2, \"RegisterUser\");\n$RefreshReg$(_c3, \"CheckSession\");","map":{"version":3,"sources":["/Users/weijunxia/GA_SEIR/projects/DriveMe/client/src/services/Auth.js"],"names":["Client","SignInUser","data","res","post","localStorage","setItem","token","user","error","RegisterUser","CheckSession","get"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,OAAnB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACxC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,IAAP,CAAY,aAAZ,EAA2BF,IAA3B,CAAlB;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACD,IAAJ,CAASK,KAAvC;AACA,WAAOJ,GAAG,CAACD,IAAJ,CAASM,IAAhB;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF,CARM;KAAMR,U;AAUb,OAAO,MAAMS,YAAY,GAAG,MAAOR,IAAP,IAAgB;AAC1C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA8BF,IAA9B,CAAlB;AACA,WAAOC,GAAG,CAACD,IAAX;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF,CAPM;MAAMC,Y;AASb,OAAO,MAAMC,YAAY,GAAG,YAAY;AACtC,MAAI;AACF,UAAMR,GAAG,GAAG,MAAMH,MAAM,CAACY,GAAP,CAAW,eAAX,CAAlB;AACA,WAAOT,GAAG,CAACD,IAAX;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF,CAPM;MAAME,Y","sourcesContent":["import Client from './api'\n\nexport const SignInUser = async (data) => {\n  try {\n    const res = await Client.post('/auth/login', data)\n    localStorage.setItem('token', res.data.token)\n    return res.data.user\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const RegisterUser = async (data) => {\n  try {\n    const res = await Client.post('/auth/register', data)\n    return res.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const CheckSession = async () => {\n  try {\n    const res = await Client.get('/auth/session')\n    return res.data\n  } catch (error) {\n    throw error\n  }\n}\n"]},"metadata":{},"sourceType":"module"}